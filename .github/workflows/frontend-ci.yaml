name: Frontend CI

on:
  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  lint:
    name: 'Linting Frontend CI'
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: starter/frontend

      - name: Run lint
        run: npm run lint
        working-directory: starter/frontend

  test:
    name: 'Testing Frontend CI'
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: starter/frontend

      - name: Run test
        run: npm run test
        working-directory: starter/frontend

  build:
    name: 'Building Frontend CI'
    needs: [ lint, test ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: starter/frontend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image
        run: |
          cd starter/frontend
          docker build --no-cache --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
      
      - name: Run docker image
        run: docker run --name mp-frontend -p 3000:3000 -d mp-frontend
      
      - name: Review logs
        run: docker logs mp-frontend